{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setDarkMode","querySelector","classList","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","event","checked"],"mappings":"AAAA,aAEA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAEtCE,YAAc,WAClBH,SAASI,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,OACpC,EAEMC,aAAe,WACnBR,SAASI,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,QACpC,EAEME,0BAA4B,WAChC,OAAOH,aAAaI,QAAQ,YAC9B,EAEMC,yBAA2B,WAC/B,OAAOC,OAAOC,WAAW,gCAAgCC,QAC3C,OACA,OAChB,EAEMC,mBAAqB,WAGhB,SADKN,6BAA+BE,4BAC3BZ,WAAWiB,QAAUd,YAAYc,OACrD,EAGMC,aAAejB,SAASkB,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAAAC,GACnBA,EAAOC,iBAAiB,SAAS,SAACC,GAChCvB,WAAWwB,QAAUpB,cAAgBK,cACvC,GACF,IAIAI,OAAOC,WAAW,gCACXQ,iBAAiB,UAAU,SAACC,GAC3BA,EAAMR,QAAUf,WAAWiB,QAAUd,YAAYc,OACnD,IAGND","file":"script.js","sourcesContent":["\r\n\r\nconst darkButton = document.getElementById('dark');\r\nconst lightButton = document.getElementById('light');\r\n\r\nconst setDarkMode = () => {\r\n  document.querySelector('body').classList = 'dark';\r\n  localStorage.setItem('colorMode', 'dark');\r\n};\r\n\r\nconst setLightMode = () => {\r\n  document.querySelector('body').classList = 'light';\r\n  localStorage.setItem('colorMode', 'light');\r\n};\r\n\r\nconst colorModeFromLocalStorage = () => {\r\n  return localStorage.getItem('colorMode');\r\n};\r\n\r\nconst colorModeFromPreferences = () => {\r\n  return window.matchMedia('(prefers-color-scheme: dark)').matches \r\n              ? 'dark'\r\n              : 'light' // If preference is set or does not match anything (light is default)\r\n};\r\n\r\nconst loadAndUpdateColor = () => {\r\n  // local storage has precendence over the prefers-color-scheme\r\n  const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n  color == 'dark' ? darkButton.click() : lightButton.click();\r\n};\r\n\r\n// when the inputs are clicked, check which radio button is checked and change the color\r\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\r\nradioButtons.forEach(button => {\r\n  button.addEventListener('click', (event) => {\r\n    darkButton.checked ? setDarkMode() : setLightMode();\r\n  });\r\n});\r\n\r\n// when the prefers-color-scheme changes, this event will be emitted\r\n// event reflects the media query, if it matches, the new color is dark, else it is light\r\nwindow.matchMedia('(prefers-color-scheme: dark)')\r\n      .addEventListener('change', (event) => {\r\n        event.matches ? darkButton.click() : lightButton.click();\r\n      });\r\n      \r\n// Load the right color on startup - localStorage has precedence\r\nloadAndUpdateColor();"]}